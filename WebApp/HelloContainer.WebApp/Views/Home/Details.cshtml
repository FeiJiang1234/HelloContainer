@model HelloContainer.WebApp.Services.ContainerDto
@{
    ViewData["Title"] = "Container Details";
}

<div class="row">
    <div class="col-md-8">
        <h1>@Model.Name</h1>
    </div>
    <div class="col-md-4 text-end">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@if (!string.IsNullOrEmpty(TempData["Error"] as string))
{
    <div class="alert alert-danger" role="alert">
        @TempData["Error"]
    </div>
}

<div class="row mt-3">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Container Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Name:</dt>
                    <dd class="col-sm-8">@Model.Name</dd>
                    
                    <dt class="col-sm-4">Capacity:</dt>
                    <dd class="col-sm-8">@Model.Capacity L</dd>
                    
                    <dt class="col-sm-4">Current Volume:</dt>
                    <dd class="col-sm-8">@Model.CurrentVolume L</dd>
                    
                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8">
                        <span class="badge bg-@(Model.Status == "Active" ? "success" : "secondary")">@Model.Status</span>
                    </dd>
                    
                    <dt class="col-sm-4">Created:</dt>
                    <dd class="col-sm-8">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>
                </dl>
                
                <div class="progress mb-3">
                    <div class="progress-bar" role="progressbar" 
                         style="width: @((Model.CurrentVolume / Model.Capacity * 100).ToString("F1"))%" 
                         aria-valuenow="@Model.CurrentVolume" 
                         aria-valuemin="0" 
                         aria-valuemax="@Model.Capacity">
                        @((Model.CurrentVolume / Model.Capacity * 100).ToString("F1"))%
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Add Water</h5>
            </div>
            <div class="card-body">
                <form asp-action="AddWater" asp-route-id="@Model.Id" method="post">
                    @Html.AntiForgeryToken()
                    
                    <div class="form-group mb-3">
                        <label for="amount" class="form-label">Amount (Liters)</label>
                        <input type="number" name="amount" class="form-control" step="0.1" min="0.1" 
                               max="@(Model.Capacity - Model.CurrentVolume)" placeholder="Enter amount" required />
                        <div class="form-text">
                            Available space: @(Model.Capacity - Model.CurrentVolume) L
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary" 
                            @(Model.CurrentVolume >= Model.Capacity ? "disabled" : "")>
                        Add Water
                    </button>
                </form>
            </div>
        </div>
        
        @if (Model.ConnectedContainers.Any())
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h5>Connected Containers</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var connectedId in Model.ConnectedContainers)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Container @connectedId.ToString().Substring(0, 8)...
                                <a asp-action="Details" asp-route-id="@connectedId" class="btn btn-sm btn-outline-primary">View</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

